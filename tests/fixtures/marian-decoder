#!/usr/bin/env python3
"""
marian-decoder test fixture

Do not rely on marian-decoder in tests. This mocks marian-decoder by uppercasing the
source sentences, and saving the arguments to marian-decoder.args.txt.
"""

import json
import os
from pathlib import Path
import sys

artifacts_dir = os.environ.get("TEST_ARTIFACTS")

if not artifacts_dir:
    raise Exception("TEST_ARTIFACTS was not set.")

if not os.path.exists(artifacts_dir):
    raise Exception("The TEST_ARTIFACTS directory did not exist")

# Write the arguments to disk
arguments = sys.argv[1:]
with open(os.path.join(artifacts_dir, "marian-decoder.args.txt"), "w") as input_path:
    json.dump(arguments, input_path)

# Output the input but uppercase.
try:
    # The input was provided as a file.

    input_path = Path(arguments[arguments.index("--input") + 1])
    output_path = Path(arguments[arguments.index("--output") + 1])
    assert input_path.exists(), "The input file exists"

    print(f"[marian-decoder] open {input_path}")
    print(f"[marian-decoder] write out uppercase lines to {output_path}")

    with input_path.open("rt") as input:
        with output_path.open("wt") as outfile:
            for line in input:
                outfile.write(line.upper())


except ValueError:
    # The input is being provided as stdin.
    for line in sys.stdin:
        print(line.upper(), end="")
