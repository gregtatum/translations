# The OpusTrainer config for a student model.
# https://github.com/hplt-project/OpusTrainer?tab=readme-ov-file#configuration-file

datasets:
  original: {dataset0} # Original parallel corpus

stages:
  - train

train:
  - original 1.0
  - until original inf # General training until marian early stops

seed: 1111

# The data is provided in the following format:
# <src_sentence> "\t" <trg_sentence> "\t" <alignments>
num_fields: 3

# The train.py file will configure the modifiers based on the language's scripts
# and what features they support.
#
# The default values of the modifiers are taken from the paper https://arxiv.org/pdf/2311.14838.pdf
# Please refer to docs/opus-trainer.md for further details
# Also, these modifiers will be flattened into a single modifier list depending on the
# properties of the language's script.
#
# See ScriptType pipeline/data/lang_script.py for more documentation on the meaning of
# these terms.
modifiers:
  # These modifiers are applied to all lnaguages.
  common:
    # Insert new sentences composed from Unicode noise.
    - Noise: 0.0005
      min_word_length: 2 # Minimum word length for each word in the noisy sentence
      max_word_length: 5 # Maximum word length for each word in the noisy sentence
      max_words: 6 # Maximum number of words in each noisy sentence

    # generates inline noise (emojis etc.) matching position in source and target using alignments
    # spm_vocab argument: retokenize alignments from spaces to Sentencepiece subwords and feed to Marian
    # Tags modifier has to be the last one to retokenize the alignments
    - Tags: 0.005
      augment: 1
      tag: 0
      custom_detok_src: "icu:{src}"
      custom_detok_trg: "icu:{trg}"
      spm_vocab_src: {vocab_src}
      spm_vocab_trg: {vocab_trg}

  # The casing modifiers work on both the src and trg sentence. However, we only want to
  # apply the casing modifiers if the src language's script supports casing. This is
  # because the model would be confused on arbitrary trg casing when the src side gives
  # no indication that the casing should be different.
  bicameral_src:
    # boost upper case a little as we see that the models underperform on upper case dataset on evaluation
    - UpperCase: 0.07 # Apply randomly to 7% of sentences
    - TitleCase: 0.05
    
  # A Phonemic is one that doesn't use logographic features such as ideographs. Hangul
  # is excluded here due to it's featural nature of generating characters from features,
  # which won't play nicely with the way typos are actually introduced into the language.
  phonemic_src:
    # Introduce artificial typos in the source text.
    - Typos: 0.05
